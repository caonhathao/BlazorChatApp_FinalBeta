@page "/"
@page "/Account/Login"

@using System.ComponentModel.DataAnnotations
@using Microsoft.AspNetCore.Components.Authorization
<div id="container-form">
    <div class="d-flex flex-column justify-content-center title mx-lg-2">
        <h1 class="text-center">Chào mừng bạn đến với Blazing Chat</h1>
        <h2 class="text-center">Bắt đầu trò chuyện luôn đi nào!</h2>
    </div>
    <div class="row justify-content-center">
        <div class="col-ms-4 mx-lg-2">
            @(message != "" ? message : "")
            <section class="form-container">
                <EditForm Context="formContext" Model="loginModel" method="post" OnValidSubmit="LoginAsync" FormName="login">
                    <div class="d-flex flex-column justify-content-center align-items-center">
                        <DataAnnotationsValidator />
                        <h2 class="text-center my-4">Đăng nhập tài khoản đi nào!</h2>

                        <hr />

                        <ValidationSummary class="text-danger" role="alert" />
                        <div class="form-floating input-form">
                            <InputText @bind-Value="loginModel.Email" class="form-control" id="userEmail"
                                       autocomplete="off" aria-required="true" />
                                       <label for="email" class="form-label">Email</label>
                            <ValidationMessage For="() => loginModel.Email" class="text-danger" />

                        </div>
                        <div class="form-floating input-form">
                            <InputText type="password" @bind-Value="loginModel.Password" class="form-control" id="userPassword"
                                       autocomplete="off" aria-required="true" />
                            <label for="passwprd" class="form-label">Password</label>
                            <ValidationMessage For="() => loginModel.Password" class="text-danger" />
                        </div>
                        <button type="submit" class="btn">Đăng nhập</button>
                    </div>

                    <hr />

                    <div class="d-flex justify-content-center align-items-center">
                        <label>Chưa có tài khoản?</label>
                        <button type="submit" class="btn">
                            <NavLink style="color:var(--secondary-color);text-decoration:none;" href="/Account/Register">Đăng kí ngay!</NavLink>
                        </button>
                    </div>
                </EditForm>
            </section>
        </div>
    </div>
</div>
@code {
    string message = string.Empty;
    [SupplyParameterFromForm]
    private LoginModel loginModel { get; set; } = new();

    async Task LoginAsync()
    {
        var findUser = await userManager.FindByEmailAsync(loginModel.Email);
        if (findUser == null)
        {
            message = "User is not registered";
            return;
        }

        var result = await signInManager.CheckPasswordSignInAsync(findUser, loginModel.Password, false);
        if (!result.Succeeded)
        {
            message = "Invalid email or password";
            return;
        }

        await signInManager.PasswordSignInAsync(findUser, loginModel.Password, false, false);
        navManager.NavigateTo("/home",true);
    }

    public class LoginModel
    {
        [Required(ErrorMessage = "Email is required")]
        public string Email { get; set; } = string.Empty;
        [Required(ErrorMessage = "Password is required")]
        public string Password { get; set; } = string.Empty;
    }
}
